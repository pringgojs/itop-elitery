<?php

namespace Container7LIfrgT;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUserProfileBrickControllerService extends Combodo_iTop_Portal_KernelProdContainer
{
    /*
     * Gets the public 'Combodo\iTop\Portal\Controller\UserProfileBrickController' shared autowired service.
     *
     * @return \Combodo\iTop\Portal\Controller\UserProfileBrickController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 5).''.\DIRECTORY_SEPARATOR.'lib'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'framework-bundle'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'AbstractController.php';
        include_once \dirname(__DIR__, 5).''.\DIRECTORY_SEPARATOR.'env-production'.\DIRECTORY_SEPARATOR.'itop-portal-base'.\DIRECTORY_SEPARATOR.'portal'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'AbstractController.php';
        include_once \dirname(__DIR__, 5).''.\DIRECTORY_SEPARATOR.'env-production'.\DIRECTORY_SEPARATOR.'itop-portal-base'.\DIRECTORY_SEPARATOR.'portal'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'BrickController.php';
        include_once \dirname(__DIR__, 5).''.\DIRECTORY_SEPARATOR.'env-production'.\DIRECTORY_SEPARATOR.'itop-portal-base'.\DIRECTORY_SEPARATOR.'portal'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'UserProfileBrickController.php';

        $container->services['Combodo\\iTop\\Portal\\Controller\\UserProfileBrickController'] = $instance = new \Combodo\iTop\Portal\Controller\UserProfileBrickController();

        $instance->setContainer(($container->privates['.service_locator.oiiXv_v'] ?? $container->load('get_ServiceLocator_OiiXvVService'))->withContext('Combodo\\iTop\\Portal\\Controller\\UserProfileBrickController', $container));

        return $instance;
    }
}
